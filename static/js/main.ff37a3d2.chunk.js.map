{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h10/H10.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messages","circle","src","avatar","ugol","message","name","p","span","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","deleteAffairCallback","priority","onClick","t","_id","Affairs","mappedAffairs","data","map","a","setFilter","style","background","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","newAffairsFilter","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","copyUsers","push","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","c","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","o","i","SuperRadio","onChangeCallback","arr","HW7","homeWorkReducer","action","payload","el","sort","b","toLowerCase","age","initialPeople","HW8","people","setPeople","finalPeople","float","width","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","toISOString","slice","onMouseEnter","onMouseLeave","id","window","setInterval","Date","HW9","initState","loading","loadingAC","HW10","useSelector","dispatch","useDispatch","loader","console","log","setTimeout","SuperRange","onChangeRange","setValue1","value1","finalRangeClassName","range","SuperDoubleRange","React","value_range","onChangeHandler","Box","sx","Slider","getAriaLabel","event","newValue","valueLabelDisplay","HW11","value2","setValue2","PreJunior","Error404","to","JuniorPlus","Junior","PATH","Routes","path","exact","render","Header","header","link","activeClassName","active","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ff37a3d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lgUq\",\"link\":\"Header_link__2CdWg\",\"active\":\"Header_active__1UVj-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3P7Dd\",\"messages\":\"Message_messages__2P3hg\",\"circle\":\"Message_circle__vqqNo\",\"name\":\"Message_name__Ljv06\",\"p\":\"Message_p__2IWvK\",\"span\":\"Message_span__2jpym\",\"ugol\":\"Message_ugol__EiVrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3qCNf\",\"superInput\":\"SuperInputText_superInput__3lTxf\",\"errorInput\":\"SuperInputText_errorInput__qMeXg\",\"error\":\"SuperInputText_error__1TBPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1mrWX\",\"red\":\"SuperButton_red__nfhjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__Ui1MA\",\"column\":\"HW4_column__374sd\",\"testSpanError\":\"HW4_testSpanError__kjWqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__1GDJf\",\"checkbox\":\"SuperCheckbox_checkbox__1ZcLS\",\"spanClassName\":\"SuperCheckbox_spanClassName__3EmEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1XnAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__2hHui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__EnT6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"H10_loader__37glE\",\"load5\":\"H10_load5__3vb15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1lNwk\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div>\r\n                <img className={s.circle} src={props.avatar}/>\r\n            </div>\r\n            <span className={s.ugol}></span>\r\n            < div className={s.message}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <p className={s.p}>{props.message} <span className={s.span}>{props.time}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message, {MessageType} from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'Npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nconst Affair: React.FC<AffairPropsType>=({affair, deleteAffairCallback, ...restProps}) =>{\r\n    const deleteCallback = (t: number) => {\r\n        deleteAffairCallback(t)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div key={affair._id}>\r\n            {affair.name} {affair.priority}\r\n            <SuperButton onClick={() => deleteCallback(affair._id)}>x</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <SuperButton onClick={setAll} style={{background: 'grey'}}>All</SuperButton>\r\n            <SuperButton onClick={setHigh} style={{background: 'grey'}}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle} style={{background: 'grey'}}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow} style={{background: 'grey'}}>Low</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\n\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => {\r\n    let newAffairsFilter = [];\r\n    if (filter === 'all') return affairs\r\n    else {\r\n        switch (filter) {\r\n            case \"low\":\r\n                newAffairsFilter = affairs.filter(t => t.priority === filter)\r\n                break;\r\n            case \"middle\":\r\n                newAffairsFilter = affairs.filter(t => t.priority === filter)\r\n                break;\r\n            case \"high\":\r\n                newAffairsFilter = affairs.filter(t => t.priority === filter)\r\n                break\r\n        }\r\n    }\r\n    return newAffairsFilter\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => {\r\n    return affairs.filter(t => t._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={(filter: FilterType)=> setFilter(filter)}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput:s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = () => {\r\n        if (error) {\r\n            const style = s.error\r\n            return style\r\n        }\r\n        return ''\r\n    }\r\n    return (\r\n        <div>\r\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass()}/>\r\n            <span>{error}</span>\r\n            <SuperButton onClick={addUser}>add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    let [error, setError] = useState<boolean>(false)// need to fix any\r\n\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.currentTarget.value === \" \") {\r\n            setError(true)\r\n        } else {\r\n            setName(e.currentTarget.value)\r\n            setError(false)\r\n        }\r\n\r\n        // e.currentTarget.value=== \" \" ? setError(true):setName(e.currentTarget.value)\r\n        // setError(false)\r\n    }\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        setName('')\r\n        alert(`Hello  '${name}'!`)\r\n        // need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error ? 'error, add name' : ''}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id:  string// need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        if (name!=='') {\r\n            const copyUsers = [...users]\r\n            copyUsers.push({_id:v1(),name:name})\r\n            setUsers(copyUsers)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport c from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${c.span}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ➜{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        const state = restoreState<string>('editable-span-value', value)\r\n        setValue(state)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n            <option key={i}>{o}</option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption?.(e.currentTarget.value)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n            onChangeOption?.(e.currentTarget.value)\r\n        }\r\n\r\n        const mappedOptions: any[] = options ? options.map((o, i) => (\r\n            <label key={name + '-' + i}>\r\n                <input\r\n                    type={name}\r\n                    onChange={onChangeCallback}\r\n                    checked={value === o ? true : false}\r\n                    value={o}\r\n                    // name, checked, value, onChange\r\n                />\r\n                {o}\r\n            </label>\r\n        )) : []\r\n\r\n        return (\r\n            <>\r\n                {mappedOptions}\r\n            </>\r\n        )\r\n    }\r\n\r\n    export default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {man} from \"../HW8\";\r\n\r\nexport const homeWorkReducer = (state: Array<man>, action: homeWorkerReducerType) => { // need to fix any\r\n\r\n    switch (action.type) {\r\n\r\n        case 'sort': {\r\n            if (action.payload === 'up') {\r\n                const stateCopy = state.map(el => el).sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n                return stateCopy\r\n            } else {\r\n                const stateCopy = state.map(el => el).sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? 1 : -1)\r\n                return stateCopy\r\n            }\r\n        }\r\n        case 'check': {\r\n\r\n            const stateCopy = state.filter(el => el.age > 18)\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype homeWorkerReducerType = sortUpACType | sortDownACType | checkACType\r\n\r\ntype sortUpACType = ReturnType<typeof sortUpAC>\r\nexport const sortUpAC = () => {\r\n    return {\r\n        type: 'sort',\r\n        payload: {\r\n            sort: 'up'\r\n        }\r\n    }\r\n}\r\ntype sortDownACType = ReturnType<typeof sortDownAC>\r\nconst sortDownAC = () => {\r\n    return {\r\n        type: 'sort',\r\n        payload: 'down'\r\n    }\r\n}\r\ntype checkACType = ReturnType<typeof checkAC>\r\nexport const checkAC = () => {\r\n    return {\r\n        type: 'check',\r\n        payload: {}\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {checkAC, homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\n// export type UserType =\r\n\r\nexport type man = {\r\n    _id:number,\r\n    name: string,\r\n    age:number\r\n}\r\n\r\n\r\n\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 17},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<man>>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: man) => (\r\n        <div key={p._id}>\r\n            <div style={{float:'left',width: '20%'}} >{p.name}</div>\r\n            <div>{p.age}</div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: ''}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div style={{float:'left'}}><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div style={{float:'left'}}><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div style={{float:'left'}}><SuperButton onClick={check}>check 18</SuperButton></div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>()\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)// stop\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new  Date)// setDate\r\n        }, 100)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)// show\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)// close\r\n    }\r\n\r\n    const stringTime = 'Time'+ (date?(+ (date.getHours()< 10 ? '0' + date.getHours() : date.getHours())\r\n        + ':' + (date.getMinutes()<10 ? '0' + date.getMinutes() : date.getMinutes())\r\n        + ':' + (date.getSeconds()<10 ? '0' + date.getSeconds() : date.getSeconds()) ):'')\r\n        // fix with date\r\n\r\n    const stringDate = 'Date' + ' ' + (date?date.toISOString().slice(0, 10):'')// fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","const SET_LOADING = 'SET-LOADING'\r\n\r\nexport type InitialStateType = {\r\n    loading: boolean\r\n}\r\n\r\nconst initState: InitialStateType = {\r\n    loading: false\r\n}\r\n\r\nexport const loadingReducer = (state: InitialStateType = initState, action: loadingACType): InitialStateType => { // fix any\r\n    switch (action.type) {\r\n        case 'SET-LOADING': {\r\n            return {...state, loading: action.loading}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype loadingACType = ReturnType<typeof loadingAC>\r\n\r\nexport const loadingAC = (loading: boolean) => {\r\n    return {\r\n        type: SET_LOADING,\r\n        loading\r\n    } as const\r\n} // fix any","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {InitialStateType, loadingAC} from \"./bll/loadingReducer\";\r\nimport style from './H10.module.css'\r\n\r\nfunction HW10() {\r\n    let {loading} = useSelector<AppStoreType, InitialStateType>(state => state.loading)\r\n\r\n    const dispatch = useDispatch()\r\n    //const loading = false\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n        // dispatch\r\n        // setTimeout\r\n        console.log('loading true')\r\n\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n            console.log('loading false')\r\n        }, 2000)\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {\r\n                loading\r\n                    ? (\r\n                        <div className={style.loader}>Loading...</div>\r\n                    ) : (\r\n                        <div>\r\n                            <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                        </div>\r\n                    )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useEffect} from  'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void,\r\n    setValue1:(value:number)=>void,\r\n    value1:number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n        setValue1,\r\n        value1,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n        const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n\r\n        setValue1(+e.currentTarget.value)\r\n\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={value1}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\nimport {Box, Slider} from \"@mui/material\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: [number, number] | number[]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n    const [value_range, setValue] = React.useState<number[]>(value ? value : [0, 100]);\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n        onChangeHandler(newValue as number[])\r\n    };\r\n    const onChangeHandler = (arr:number[]) =>{\r\n        onChangeRange && onChangeRange(arr)\r\n    }\r\n\r\n    return (\r\n            <Box sx={{ width: 300 }}>\r\n                <Slider\r\n                    getAriaLabel={() => 'SuperDoubleRange'}\r\n                    value={value?value:value_range}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"auto\"\r\n                />\r\n            </Box>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0)\r\n    const [value2, setValue2] = useState(100)\r\n\r\n    const onChangeRange = ( value: [number, number] | number[]) => {\r\n        setValue1(value[0])\r\n        setValue2(value[1])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange setValue1={setValue1} value1={value1}\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    value={[value1,value2]}\r\n                    onChangeRange={onChangeRange}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-jumbo text-ginormous\">Oops!</h1>\r\n            <div>Error code: 404</div>\r\n            <h2>We can't seem to find the page you're looking for</h2>\r\n            <ul className=\"list-unstyled\">\r\n                <li>Here are some helpful links instead:</li>\r\n                <li><NavLink to={'/'} >pre_junior</NavLink></li>\r\n                <li><NavLink to={'/junior'}>junior</NavLink>\r\n                </li>\r\n                <li><NavLink to={'/junior-plus'}>junior+</NavLink></li>\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react';\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            Junior Plus\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport {Switch, Redirect, Route} from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\r\nimport {Junior} from \"./pages/Junior\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport c from './Header.module.css'\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={c.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={c.link} activeClassName={c.active}>pre_junior</NavLink>----\r\n            <NavLink to={PATH.JUNIOR} className={c.link} activeClassName={c.active}>junior</NavLink>----\r\n            <NavLink to={PATH.JUNIOR_PLUS} className={c.link} activeClassName={c.active}>junior+</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {loadingReducer} from './loadingReducer'\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n\r\n})\r\n\r\nexport const store = createStore(reducers)\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {store} from \"./p2-homeworks/h10/bll/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n// igg2\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}